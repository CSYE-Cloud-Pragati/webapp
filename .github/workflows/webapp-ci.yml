name: webapp-ci

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Continuous Integration Test
    runs-on: ubuntu-latest
    environment: dev

    # Define secrets as job-level environment variables.
    env:
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_HOST: ${{ secrets.DB_HOST }}
      PORT: ${{ secrets.PORT }}

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U ${{ secrets.DB_USER }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"

      - name: Install Dependencies
        run: npm install

      - name: Configure Environment Variables
        run: |
          echo DB_USER=${{ secrets.DB_USER }}
          echo DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          echo DB_NAME=${{ secrets.DB_NAME }}
          echo DB_HOST=${{ secrets.DB_HOST }}
          echo PORT=${{ secrets.PORT }}

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h "127.0.0.1" -p "5432"; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 5
          done

      - name: Run Tests
        run: npm test -- --forceExit
        env:
          PORT: ${{ secrets.PORT }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_HOST: ${{ secrets.DB_HOST }}
