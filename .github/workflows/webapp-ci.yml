name: webapp-ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Run tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432

    env:
      DB_HOST: "127.0.0.1"
      DB_PORT: "5432"
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Debug PostgreSQL connection
        run: |
          echo "Testing PostgreSQL connection..."
          PGPASSWORD="${DB_PASSWORD}" pg_isready -h "${DB_HOST}" -p "${DB_PORT}" -U "${DB_USER}"

      - name: Wait for PostgreSQL
        run: |
          echo "Waiting for PostgreSQL to start..."
          for i in {1..15}; do
            if PGPASSWORD="${DB_PASSWORD}" psql -h "${DB_HOST}" -U "${DB_USER}" -p "${DB_PORT}" -c '\q' > /dev/null 2>&1; then
              echo "PostgreSQL is ready!"
              exit 0
            fi
            echo "PostgreSQL is unavailable - sleeping"
            sleep 3
          done
          echo "PostgreSQL failed to start"
          exit 1

      - name: Create database and user
        run: |
          PGPASSWORD="${DB_PASSWORD}" psql -h "${DB_HOST}" -U "${DB_USER}" -p "${DB_PORT}" <<-EOSQL

            DO \$\$
            BEGIN
              IF NOT EXISTS (
                SELECT FROM pg_database 
                WHERE datname = '${DB_NAME}'
              ) THEN
                EXECUTE 'CREATE DATABASE ${DB_NAME}';
              END IF;
            END
            \$\$;

            DO \$\$
            BEGIN
              IF NOT EXISTS (
                SELECT FROM pg_catalog.pg_roles 
                WHERE rolname = '${DB_USER}'
              ) THEN
                EXECUTE 'CREATE USER ${DB_USER} WITH ENCRYPTED PASSWORD ''${DB_PASSWORD}''';
              END IF;
            END
            \$\$;

            GRANT ALL PRIVILEGES ON DATABASE "${DB_NAME}" TO "${DB_USER}";
          EOSQL

      - name: Run tests
        run: npm test
