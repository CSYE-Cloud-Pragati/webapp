name: webapp-ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Run tests
    runs-on: ubuntu-latest

    env:
      DB_HOST: "127.0.0.1"
      DB_PORT: "5432"
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      # ✅ New Step: Install PostgreSQL 8.13 from Source
      - name: Install PostgreSQL 8.13
        run: |
          echo "Installing PostgreSQL 8.13..."
          sudo apt-get update
          sudo apt-get install -y wget build-essential libreadline-dev zlib1g-dev flex bison
          
          # Download and extract PostgreSQL 8.13 source
          wget https://ftp.postgresql.org/pub/source/v8.1.3/postgresql-8.1.3.tar.gz
          tar -xvzf postgresql-8.1.3.tar.gz
          cd postgresql-8.1.3

          # Compile and install PostgreSQL 8.13
          ./configure --prefix=/usr/local/pgsql
          make
          sudo make install

          # Create PostgreSQL user and data directory
          sudo useradd postgres || true
          sudo mkdir -p /usr/local/pgsql/data
          sudo chown postgres /usr/local/pgsql/data

          # Initialize database
          sudo -u postgres /usr/local/pgsql/bin/initdb -D /usr/local/pgsql/data

          # Start PostgreSQL 8.13
          sudo -u postgres /usr/local/pgsql/bin/pg_ctl -D /usr/local/pgsql/data -l logfile start

          echo "PostgreSQL 8.13 installed and started successfully."

      # ✅ Improved: Wait for PostgreSQL to start
      - name: Wait for PostgreSQL
        run: |
          echo "Waiting for PostgreSQL to start..."
          for i in {1..15}; do
            if PGPASSWORD="postgres" /usr/local/pgsql/bin/psql -h "${DB_HOST}" -U "postgres" -p "${DB_PORT}" -c '\q' > /dev/null 2>&1; then
              echo "PostgreSQL is ready!"
              exit 0
            fi
            echo "PostgreSQL is unavailable - sleeping"
            sleep 3
          done
          echo "PostgreSQL failed to start"
          exit 1

      - name: Create database and user
        run: |
          PGPASSWORD="${DB_PASSWORD}" /usr/local/pgsql/bin/psql -h "${DB_HOST}" -U "${DB_USER}" -p "${DB_PORT}" <<-EOSQL
            DO \$\$
            BEGIN
              IF NOT EXISTS (
                SELECT FROM pg_database 
                WHERE datname = '${DB_NAME}'
              ) THEN
                EXECUTE 'CREATE DATABASE ${DB_NAME}';
              END IF;
            END
            \$\$;

            DO \$\$
            BEGIN
              IF NOT EXISTS (
                SELECT FROM pg_catalog.pg_roles 
                WHERE rolname = '${DB_USER}'
              ) THEN
                EXECUTE 'CREATE USER ${DB_USER} WITH ENCRYPTED PASSWORD ''${DB_PASSWORD}''';
              END IF;
            END
            \$\$;

            GRANT ALL PRIVILEGES ON DATABASE "${DB_NAME}" TO "${DB_USER}";
          EOSQL

      - name: Run tests
        run: npm test